{"version":3,"sources":["logo.svg","Component/Showdata.jsx","Component/Filepresenter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Showdata","props","useState","child","setChild","Button","type","class","onClick","head","childNode","count","readExcelFile","excelFile","then","rows","rChild","map","row","dChild","element","push","scope","Math","random","style","background","color","ans","console","log","createTable1","className","present","Filepresenter","file","setFile","showData","width","id","onChange","event","target","files","callShowData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,2CC+DAA,MAzDf,SAAkBC,GAEd,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KA2CA,OACI,gCACI,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,kBAAkBC,QAAS,kBA1C1C,WACjB,IACIC,GAAO,EACPC,EAAY,GACZC,EAAQ,EACZC,YAAcX,EAAMY,WAAWC,MAAK,SAAAC,GAChC,IAAIC,EAAS,GAqBb,OApBAD,EAAKE,KAAI,SAAAC,GACL,IAAIC,EAAS,GACbD,EAAID,KAAI,SAAAG,GACDX,EACCU,EAAOE,KAAK,oBAAIC,MAAM,MAAV,SAAqCF,GAAhBG,KAAKC,WAGtCL,EAAOE,KAAK,6BAAyBD,GAAhBG,KAAKC,cAG/Bf,GACCO,EAAOK,KAAK,uBAAOI,MAAO,CAACC,WAAY,QAASC,MAAO,SAA3C,SAAqD,+BAAI,oBAAIL,MAAM,MAAV,gBAAwBH,QAC7FV,GAAO,IAGPC,EAAUW,KAAK,+BAAwB,oBAAIC,MAAM,MAAV,SAAiBX,IAAYQ,IAA5CI,KAAKC,WAC7Bb,QAGRK,EAAOK,KAAKX,GACLM,KACRF,MAAK,SAAAc,GACJC,QAAQC,IAAI,mBAAoBF,GAChCxB,EAASwB,MAYoDG,IAA7D,qBACA,qBAAKC,UAAU,kBAAf,SACI,qBAAKA,UAAU,0BAAf,SAVI,WACZ,GAAa,MAAT7B,EACA,OAAQ,uBAAO6B,UAAU,QAAjB,SAA0B7B,IASjC8B,WCnBEC,MAlCf,WAEI,MAAwBhC,mBAAS,MAAjC,mBAAOiC,EAAP,KAAaC,EAAb,KACA,EAAgClC,oBAAS,GAAzC,mBAAOmC,EAAP,KAkBA,OAlBA,KAmBI,gCACI,kDACA,gCACI,qBAAKL,UAAU,OAAf,SACI,uBAAOA,UAAU,4CAA4CP,MAAO,CAACa,MAAO,KAAMC,GAAG,aAAajC,KAAK,OAAOkC,SArBzG,SAACC,GAClBZ,QAAQC,IAAI,6BAA8BW,EAAMC,OAAOC,MAAM,IAC7DP,EAAQK,EAAMC,OAAOC,MAAM,SAKV,WAEjB,GADAd,QAAQC,IAAI,+BAAgCO,GAChC,MAARF,EACA,OACI,cAAC,EAAD,CAAUtB,UAAWsB,IAYpBS,UCnBFC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCKSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3e1815f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Button from 'react-bootstrap/Button'\nimport React, { useState } from 'react'\nimport readExcelFile from 'read-excel-file'\nimport './../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\nfunction Showdata(props) {\n\n    const [child, setChild] = useState(null)\n\n\n    const createTable1 = () => {\n        let child = null;\n        let head = true;\n        let childNode = [];\n        let count = 1;\n        readExcelFile(props.excelFile).then(rows => {\n            let rChild = []\n            rows.map(row => {\n                let dChild = []\n                row.map(element => {\n                    if(head){\n                        dChild.push(<th scope=\"col\" key={Math.random()}>{element}</th>)\n                    }\n                    else{\n                        dChild.push(<td key={Math.random()}>{element}</td>)\n                    }\n                })\n                if(head){\n                    rChild.push(<thead style={{background: \"black\", color: \"white\"}}><tr><th scope=\"col\">No</th>{dChild}</tr></thead>)\n                    head = false\n                }\n                else{\n                    childNode.push(<tr key={Math.random()}><td scope=\"row\">{count}</td>{dChild}</tr>);\n                    count ++\n                }\n            })\n            rChild.push(childNode);\n            return rChild;\n        }).then(ans => {\n            console.log(\"child vlaue ==> \", ans)\n            setChild(ans)\n        })\n    }\n\n    const present = () => {\n        if (child != null) {\n            return (<table className=\"table\">{child}</table>)\n        }\n    }\n\n    return (\n        <div>\n            <Button type=\"button\" class=\"btn btn-primary\" onClick={() => createTable1()} >present</Button>\n            <div className=\"container-fluid\">\n                <div className=\"row col-10 mx-auto mt-5\">\n            {present()}\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Showdata\n","import React, { useState } from 'react'\nimport Showdata from './Showdata'\n\nfunction Filepresenter() {\n\n    const [file, setFile] = useState(null)\n    const [showData, setShowData] = useState(false)\n\n    const onFileSelect = (event) => {\n        console.log(\"file has been selected => \", event.target.files[0])\n        setFile(event.target.files[0])\n\n    }\n\n\n    const callShowData = () => {\n        console.log(\"callShow data is called ==> \", showData)\n        if (file != null) {\n            return (\n                <Showdata excelFile={file} />\n            )\n        }\n    }\n\n    return (\n        <div>\n            <h1>Show Excel Sheet</h1>\n            <div>\n                <div className=\"mb-3\">\n                    <input className=\"form-control form-control-sm mx-auto mt-5\" style={{width: 400}} id=\"formFileSm\" type=\"file\" onChange={onFileSelect}/>\n                </div>\n                {callShowData()}\n            </div>\n        </div>\n    )\n}\n\nexport default Filepresenter\n","import logo from './logo.svg';\nimport './App.css';\nimport Filepresenter from './Component/Filepresenter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Filepresenter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}